{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/annaaombe/Documents/authentification/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/annaaombe/Documents/authentification/frontend/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  padding: 2em; width: 500px; \\n  margin: 0.25em;\\n  color: \", \";\\n  background: papayawhip;\\n  border-radius: 3px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Container, Form, FormGroup, Input, Label, Button, Row, Col } from 'reactstrap';\nimport LogIn from \"./LogIn\";\nimport NavBar from './navBar';\nimport styled from 'styled-components';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      confirmPassword: ''\n    };\n\n    this.createAccount = () => {\n      if (this.state.password !== this.state.confirmPassword) {\n        alert(\"password does not match\");\n      } else if (!this.state.password || !this.state.username || !this.state.confirmPassword) {\n        alert(\"Missing form fields\");\n      } else {\n        //make the API call\n        fetch(\"http://localhost:5000/createAccount\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: this.state.username,\n            password: this.state.password\n          })\n        }).then(rawJSON => {\n          return rawJSON.json();\n        }).then(data => {\n          //is there is an error state gets set to content of error \n          if (data.error) {\n            this.setState({\n              error: data.error\n            });\n          } else {\n            this.setState({\n              error: null\n            });\n          }\n\n          console.log(data);\n        });\n      }\n    };\n\n    this.checkLogin = () => {\n      fetch(\"http://localhost:5000/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          num1: 1,\n          num2: 2\n        })\n      }).then(rawJSON => {\n        return rawJSON.json();\n      }).then(data => {\n        this.setState({\n          result: data\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:5000/test', {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        hello: \"world\"\n      })\n    }).then(rawJSON => {\n      return rawJSON.json();\n    }).then(data => {\n      console.log(data);\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.error ? //connected to the backend can't sign in \n    React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.error) : null, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Create Account\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Username:\"), React.createElement(InputContainer, {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"userName\",\n      value: this.state.username,\n      onChange: evt => {\n        console.log(evt.target.value); //updates data in state\n\n        this.setState({\n          username: evt.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(InputContainer, {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"password\",\n      value: this.state.password,\n      onChange: evt => {\n        console.log(evt.target.value);\n        this.setState({\n          password: evt.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"confirmPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Confirm Password:\"), React.createElement(InputContainer, {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"confirmPassword\",\n      value: this.state.confirmPassword,\n      onChange: evt => {\n        console.log(evt.target.value);\n        this.setState({\n          confirmPassword: evt.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      color: \"success\",\n      onClick: this.createAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Create Account\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(LogIn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      style: {\n        marginTop: 25\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"success\",\n      onClick: this.checkLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Am I Loged In\"))));\n  }\n\n}\nexport default App;\nconst InputContainer = styled.input(_templateObject(), props => props.inputColor || \"palevioletred\");","map":{"version":3,"sources":["/Users/annaaombe/Documents/authentification/frontend/src/App.js"],"names":["React","Component","Container","Form","FormGroup","Input","Label","Button","Row","Col","LogIn","NavBar","styled","App","state","username","password","confirmPassword","createAccount","alert","fetch","method","headers","body","JSON","stringify","then","rawJSON","json","data","error","setState","console","log","checkLogin","num1","num2","result","componentDidMount","hello","render","color","evt","target","value","marginTop","InputContainer","input","props","inputColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Container, Form, FormGroup, Input, Label, Button,Row, Col} from 'reactstrap';\nimport LogIn from \"./LogIn\";\nimport NavBar from './navBar';\nimport styled from 'styled-components';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport class App extends Component {\n  state={\n    username: '', password:'', confirmPassword:''\n  }\n  componentDidMount(){\n    fetch('http://localhost:5000/test',{\n      method: \"POST\",\n      headers:{\"content-type\": \"application/json\"},\n      body: JSON.stringify({hello:\"world\"})\n    }).then (rawJSON =>{ return rawJSON.json();\n    }).then (data =>{console.log(data);\n    })\n  }\n\n  createAccount=()=>{\n    if(this.state.password !== this.state.confirmPassword){\n      alert(\"password does not match\")\n    }else if (\n        !this.state.password || !this.state.username || !this.state.confirmPassword\n      ) {\n        alert(\"Missing form fields\");\n    }else{\n      //make the API call\n      fetch(\"http://localhost:5000/createAccount\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: { \"Content-type\": \"application/json\" },\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tusername: this.state.username, password: this.state.password\n\t\t\t\t})\n      })\n      .then(rawJSON => { return rawJSON.json();\n      })\n      .then(data => {\n        //is there is an error state gets set to content of error \n        if (data.error) {this.setState({ error: data.error });\n        } else {this.setState({ error: null });\n        }\n        console.log(data);\n      });\n  }\n};\ncheckLogin=()=>{\n  fetch(\"http://localhost:5000/add\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: { \"Content-type\": \"application/json\" },\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tnum1: 1, num2: 2\n\t\t\t\t})\n      })\n      .then(rawJSON => { return rawJSON.json();\n      })\n      .then(data => {\n        this.setState({result: data})\n      });\n}\n  render() {\n    return (\n    <Container>\n      <Row>\n        <Col>\n          {this.state.error ? \n            (\n              //connected to the backend can't sign in \n              <p style={{ color: \"red\" }}>{this.state.error}</p>\n            ) : null}\n          <NavBar/>\n          <h3>Create Account</h3>\n          <Form>\n            <FormGroup>\n              <Label htmlFor=\"username\">Username:</Label>\n              <InputContainer \n                type=\"text\"  className=\"form-control\" id=\"userName\"\n                value={this.state.username}\n                onChange={evt=>{console.log(evt.target.value);\n                  //updates data in state\n                  this.setState({username:evt.target.value});\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"password\">Password:</Label>\n              <InputContainer \n                type=\"password\" className=\"form-control\" id=\"password\"\n                value={this.state.password}\n                onChange={evt=>{\n                  console.log(evt.target.value);\n                  this.setState({password:evt.target.value});\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"confirmPassword\">Confirm Password:</Label>\n              <InputContainer \n                type=\"password\" className=\"form-control\" id=\"confirmPassword\"\n                value={this.state.confirmPassword}\n                onChange={evt=>{\n                  console.log(evt.target.value);\n                  this.setState({confirmPassword:evt.target.value});\n                }}\n              />\n            </FormGroup>\n          </Form>\n          <Button color=\"success\" onClick={this.createAccount}>\n              Create Account\n          </Button>\n        </Col>\n        <Col>\n        <LogIn/>\n        </Col>\n      </Row>\n      <Row style={{marginTop: 25}}>\n        <Col>\n          <Button color=\"success\" onClick={this.checkLogin}>\n               Am I Loged In\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n    )\n  }\n}\n\nexport default App\nconst InputContainer = styled.input`\n  padding: 2em; width: 500px; \n  margin: 0.25em;\n  color: ${props => props.inputColor || \"palevioletred\"};\n  background: papayawhip;\n  border-radius: 3px;\n`;\n"]},"metadata":{},"sourceType":"module"}