{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/annaaombe/Documents/authentification/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/annaaombe/Documents/authentification/frontend/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  padding: 1.5em; width: 2500px; \\n  margin: 0.25em;\\n  color: \", \";\\n  background: papayawhip;\\n  border-radius: 3px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Container, Form, FormGroup, Input, Label, Button, Row, Col } from 'reactstrap';\nimport styled from 'styled-components';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      loginusername: '',\n      loginpassword: ''\n    };\n\n    this.createAccount = () => {\n      if (this.state.password !== this.state.confirmPassword) {\n        alert(\"password does not match\");\n      } else if (!this.state.password || !this.state.username || !this.state.confirmPassword) {\n        alert(\"Missing form fields\");\n      } else {\n        //make the API call\n        fetch(\"http://localhost:5000/createAccount\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: this.state.username,\n            password: this.state.password\n          })\n        }).then(rawJSON => {\n          return rawJSON.json();\n        }).then(data => {\n          //is there is an error state gets set to content of error \n          if (data.error) {\n            this.setState({\n              error: data.error\n            });\n          } else {\n            this.setState({\n              error: null\n            });\n          }\n\n          console.log(data);\n        });\n      }\n    };\n\n    this.login = () => {\n      if (!this.state.loginusername || !this.state.loginpassword) {\n        alert(\"Missing form fields\");\n      } else {\n        //make the API call\n        fetch(\"http://localhost:5000/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: this.state.loginusername,\n            password: this.state.loginpassword\n          })\n        }).then(rawJSON => {\n          return rawJSON.json();\n        }).then(data => {\n          console.log(data);\n        });\n      }\n    };\n\n    this.checkLogin = () => {\n      fetch(\"http://localhost:5000/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          num1: 1,\n          num2: 2,\n          username: this.state.loginusername,\n          password: this.state.loginpassword\n        })\n      }).then(rawJSON => {\n        return rawJSON.json();\n      }).then(data => {\n        this.setState({\n          result: data.result\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:5000/test', {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        hello: \"world\"\n      })\n    }).then(rawJSON => {\n      return rawJSON.json();\n    }).then(data => {\n      console.log(data);\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.error ? //connected to the backend can't sign in \n    React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.error) : null, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Create Account\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Username:\"), React.createElement(InputContainer, {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"userName\",\n      value: this.state.username,\n      onChange: evt => {\n        console.log(evt.target.value); //updates data in state\n\n        this.setState({\n          username: evt.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(InputContainer, {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"password\",\n      value: this.state.password,\n      onChange: evt => {\n        console.log(evt.target.value);\n        this.setState({\n          password: evt.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"confirmPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Confirm Password:\"), React.createElement(InputContainer, {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"confirmPassword\",\n      value: this.state.confirmPassword,\n      onChange: evt => {\n        console.log(evt.target.value);\n        this.setState({\n          confirmPassword: evt.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      color: \"success\",\n      onClick: this.createAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Create Account\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Username:\"), React.createElement(InputContainer, {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"userName\",\n      value: this.state.loginusername,\n      onChange: evt => {\n        console.log(evt.target.value); //updates data in state\n\n        this.setState({\n          loginusername: evt.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(InputContainer, {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"password\",\n      value: this.state.loginpassword,\n      onChange: evt => {\n        console.log(evt.target.value);\n        this.setState({\n          loginpassword: evt.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      color: \"success\",\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(Row, {\n      style: {\n        marginTop: 25\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"success\",\n      onClick: this.checkLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Am I Loged In\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \" \", this.state.result))));\n  }\n\n}\nexport default App;\nconst InputContainer = styled.input(_templateObject(), props => props.inputColor || \"palevioletred\");","map":{"version":3,"sources":["/Users/annaaombe/Documents/authentification/frontend/src/App.js"],"names":["React","Component","Container","Form","FormGroup","Input","Label","Button","Row","Col","styled","App","state","username","password","confirmPassword","loginusername","loginpassword","createAccount","alert","fetch","method","headers","body","JSON","stringify","then","rawJSON","json","data","error","setState","console","log","login","checkLogin","num1","num2","result","componentDidMount","hello","render","color","evt","target","value","marginTop","InputContainer","input","props","inputColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Container, Form, FormGroup, Input, Label, Button,Row, Col} from 'reactstrap';\nimport styled from 'styled-components';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport class App extends Component {\n  state={\n    username: '', password:'', confirmPassword:'',loginusername: '', loginpassword:''\n  }\n  componentDidMount(){\n    fetch('http://localhost:5000/test',{\n      method: \"POST\",\n      headers:{\"content-type\": \"application/json\"},\n      body: JSON.stringify({hello:\"world\"})\n    }).then (rawJSON =>{ return rawJSON.json();\n    }).then (data =>{console.log(data);\n    })\n  }\n\n  createAccount=()=>{\n    if(this.state.password !== this.state.confirmPassword){\n      alert(\"password does not match\")\n    }else if (\n        !this.state.password || !this.state.username || !this.state.confirmPassword\n      ) {\n        alert(\"Missing form fields\");\n    }else{\n      //make the API call\n      fetch(\"http://localhost:5000/createAccount\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: { \"Content-type\": \"application/json\" },\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tusername: this.state.username, password: this.state.password\n\t\t\t\t})\n      })\n      .then(rawJSON => { return rawJSON.json();\n      })\n      .then(data => {\n        //is there is an error state gets set to content of error \n        if (data.error) {this.setState({ error: data.error });\n        } else {this.setState({ error: null });\n        }\n        console.log(data);\n      });\n  }\n};\nlogin=()=>{\n  if (\n      !this.state.loginusername ||\n      !this.state.loginpassword\n    ) {\n      alert(\"Missing form fields\");\n  }else{\n    //make the API call\n    fetch(\"http://localhost:5000/login\", {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({\n        username: this.state.loginusername,\n        password: this.state.loginpassword\n      })\n    })\n      .then(rawJSON => {\n        return rawJSON.json();\n      })\n      .then(data => {\n        console.log(data);\n      });\n  }\n};\ncheckLogin=()=>{\n  fetch(\"http://localhost:5000/add\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: { \"Content-type\": \"application/json\" },\n\t\t\t\tbody: JSON.stringify({\n          num1: 1, num2: 2,\n          username: this.state.loginusername,\n          password: this.state.loginpassword\n\t\t\t\t})\n      })\n      .then(rawJSON => { \n        return rawJSON.json();\n      })\n      .then(data => {\n        this.setState({result: data.result})\n      });\n}\n  render() {\n    return (\n    <Container>\n      <Row>\n        <Col>\n          {this.state.error ? \n            (//connected to the backend can't sign in \n              <p style={{ color: \"red\" }}>{this.state.error}</p>\n            ) : null}\n          <h3>Create Account</h3>\n          <Form>\n            <FormGroup>\n              <Label htmlFor=\"username\">Username:</Label>\n              <InputContainer \n                type=\"text\"  className=\"form-control\" id=\"userName\"\n                value={this.state.username}\n                onChange={evt=>{console.log(evt.target.value);\n                  //updates data in state\n                  this.setState({username:evt.target.value});\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"password\">Password:</Label>\n              <InputContainer \n                type=\"password\" className=\"form-control\" id=\"password\"\n                value={this.state.password}\n                onChange={evt=>{\n                  console.log(evt.target.value);\n                  this.setState({password:evt.target.value});\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"confirmPassword\">Confirm Password:</Label>\n              <InputContainer \n                type=\"password\" className=\"form-control\" id=\"confirmPassword\"\n                value={this.state.confirmPassword}\n                onChange={evt=>{\n                  console.log(evt.target.value);\n                  this.setState({confirmPassword:evt.target.value});\n                }}\n              />\n            </FormGroup>\n          </Form>\n          <Button color=\"success\" onClick={this.createAccount}>\n              Create Account\n          </Button>\n        </Col>\n        <Col>\n        <h3>Log In</h3>\n      <Form>\n        <FormGroup>\n          <Label htmlFor=\"username\">Username:</Label>\n          <InputContainer \n            type=\"text\"  className=\"form-control\" id=\"userName\"\n            value={this.state.loginusername}\n            onChange={evt=>{console.log(evt.target.value);\n              //updates data in state\n              this.setState({loginusername:evt.target.value});\n            }}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"password\">Password:</Label>\n          <InputContainer \n            type=\"password\" className=\"form-control\" id=\"password\"\n            value={this.state.loginpassword}\n            onChange={evt=>{\n              console.log(evt.target.value);\n              this.setState({loginpassword: evt.target.value});\n            }}\n          />\n        </FormGroup>\n    </Form>\n    <Button color=\"success\" onClick={this.login}>\n        Login\n    </Button>\n        </Col>\n      </Row>\n      <Row style={{marginTop: 25}}>\n        <Col>\n          <Button color=\"success\" onClick={this.checkLogin}>\n               Am I Loged In\n          </Button>\n          <p> {this.state.result}</p>\n        </Col>\n      </Row>\n    </Container>\n    )\n  }\n}\n\nexport default App\nconst InputContainer = styled.input`\n  padding: 1.5em; width: 2500px; \n  margin: 0.25em;\n  color: ${props => props.inputColor || \"palevioletred\"};\n  background: papayawhip;\n  border-radius: 3px;\n`;\n"]},"metadata":{},"sourceType":"module"}