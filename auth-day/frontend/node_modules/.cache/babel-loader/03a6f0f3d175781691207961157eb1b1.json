{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/annaaombe/Documents/auth-day1/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/annaaombe/Documents/auth-day1/frontend/src/LogIn.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  padding: 2em; width: 500px; \\n  margin: 0.25em;\\n  color: \", \";\\n  background: papayawhip;\\n  border-radius: 3px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Container, Form, FormGroup, Input, Label, Button } from 'reactstrap';\nimport NavBar from './navBar';\nimport styled from 'styled-components';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loginusername: '',\n      loginpassword: ''\n    };\n\n    this.onPasswordChange = evt => {\n      this.setState({\n        password: evt.target.value\n      });\n    };\n\n    this.createAccount = () => {\n      if (this.state.password !== this.state.confirmPassword) {\n        alert(\"password does not match\");\n      } else if (!this.state.password || !this.state.username || !this.state.confirmPassword) {\n        alert(\"Missing form fields\");\n      } else {\n        //make the API call\n        fetch(\"http://localhost:5000/createAccount\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: this.state.username,\n            password: this.state.password\n          })\n        }).then(rawJSON => {\n          return rawJSON.json();\n        }).then(data => {\n          console.log(data);\n        });\n      }\n    };\n  }\n\n  componentDidMount() {} // fetch('http://localhost:5000/test',{\n  //   method: \"POST\",\n  //   headers:{\"content-type\": \"application/json\"},\n  //   body: JSON.stringify({hello:\"world\"})\n  // }).then (rawJSON =>{\n  //   return rawJSON.json();\n  // }).then (data =>{\n  //    console.log(data);\n  // })\n  //ask if this is needed\n\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Username:\"), React.createElement(InputContainer, {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"userName\",\n      value: this.state.loginusername,\n      onChange: evt => {\n        console.log(evt.target.value); //updates data in state\n\n        this.setState({\n          loginusername: evt.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(InputContainer, {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"password\",\n      value: this.state.loginpassword,\n      onChange: evt => {\n        console.log(evt.target.value);\n        this.setState({\n          loginpassword: evt.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      color: \"success\",\n      onClick: this.createAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"LogIn\"));\n  }\n\n}\nexport default App;\nconst InputContainer = styled.input(_templateObject(), props => props.inputColor || \"palevioletred\");","map":{"version":3,"sources":["/Users/annaaombe/Documents/auth-day1/frontend/src/LogIn.js"],"names":["React","Component","Container","Form","FormGroup","Input","Label","Button","NavBar","styled","App","state","loginusername","loginpassword","onPasswordChange","evt","setState","password","target","value","createAccount","confirmPassword","alert","username","fetch","method","headers","body","JSON","stringify","then","rawJSON","json","data","console","log","componentDidMount","render","InputContainer","input","props","inputColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Container, Form, FormGroup, Input, Label, Button} from 'reactstrap';\nimport NavBar from './navBar';\nimport styled from 'styled-components';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport class App extends Component {\n  state={\n    loginusername: '',\n    loginpassword:''\n  }\n  componentDidMount(){\n    // fetch('http://localhost:5000/test',{\n    //   method: \"POST\",\n    //   headers:{\"content-type\": \"application/json\"},\n    //   body: JSON.stringify({hello:\"world\"})\n    // }).then (rawJSON =>{\n    //   return rawJSON.json();\n    // }).then (data =>{\n    //    console.log(data);\n    // })\n  }\n  //ask if this is needed\n  onPasswordChange=evt=>{\n    this.setState({password:evt.target.value});\n  }\n  createAccount=()=>{\n    if(this.state.password !== this.state.confirmPassword){\n      alert(\"password does not match\")\n    }else if (\n        !this.state.password ||\n        !this.state.username ||\n        !this.state.confirmPassword\n      ) {\n        alert(\"Missing form fields\");\n    }else{\n      //make the API call\n      fetch(\"http://localhost:5000/createAccount\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: { \"Content-type\": \"application/json\" },\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tusername: this.state.username,\n\t\t\t\t\tpassword: this.state.password\n\t\t\t\t})\n\t\t\t})\n\t\t\t\t.then(rawJSON => {\n\t\t\t\t\treturn rawJSON.json();\n\t\t\t\t})\n\t\t\t\t.then(data => {\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t});\n\t\t}\n\t};\n  render() {\n    return (\n    <Container>\n      <NavBar/>\n      <h3>Log In</h3>\n      <Form>\n        <FormGroup>\n          <Label htmlFor=\"username\">Username:</Label>\n          <InputContainer \n            type=\"text\"  className=\"form-control\" id=\"userName\"\n            value={this.state.loginusername}\n            onChange={evt=>{console.log(evt.target.value);\n              //updates data in state\n              this.setState({loginusername:evt.target.value});\n            }}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"password\">Password:</Label>\n          <InputContainer \n            type=\"password\" className=\"form-control\" id=\"password\"\n            value={this.state.loginpassword}\n            onChange={evt=>{\n              console.log(evt.target.value);\n              this.setState({loginpassword: evt.target.value});\n            }}\n          />\n        </FormGroup>\n      </Form>\n      <Button color=\"success\" onClick={this.createAccount}>\n\t\t\t\t\tLogIn \n\t\t\t</Button>\n    </Container>\n    )\n  }\n}\n\nexport default App\nconst InputContainer = styled.input`\n  padding: 2em; width: 500px; \n  margin: 0.25em;\n  color: ${props => props.inputColor || \"palevioletred\"};\n  background: papayawhip;\n  border-radius: 3px;\n`;\n"]},"metadata":{},"sourceType":"module"}